#!/bin/bash

# Set default values
BOOST_LIBS="-lboost_system -lboost_serialization"

# Function to check if a command exists
command_exists () {
    command -v "$1" >/dev/null 2>&1 ;
}

# Check for g++
echo "Checking for g++-12 compiler"
if ! command -v g++-12 &> /dev/null
then
    echo "Error: g++-12 compiler not found."
    exit 1
else
    echo "Found g++-12 compiler"
fi

echo "Checking for Boost libraries"
BOOST_DIRS=("/usr/include/boost" "/usr/local/include/boost")

BOOST_FOUND=false

for DIR in "${BOOST_DIRS[@]}"; do
    if [ -d "$DIR" ]; then
        BOOST_FOUND=true
        break
    fi
done

if [ "$BOOST_FOUND" = false ]; then
    echo "Error: Boost library not found"
    exit 1
fi

echo "Boost library found"

# Maak het Makefile aan
cat > Makefile <<EOL
# Compiler en opties
CXX = g++-12
CXXFLAGS = -Wall -Wextra -std=c++11 -Wno-unused-parameter 

# Bronnen en objecten
SOURCES = laadpaal.cpp
OBJECTS = \$(SOURCES:.cpp=.o)

# Doel
TARGET = laadpaal

# Standaard regel: compileer het doel
all: \$(TARGET)

# Link de objectbestanden naar het uiteindelijke uitvoerbare bestand
\$(TARGET): \$(OBJECTS)
	\$(CXX) \$(CXXFLAGS) -o \$(TARGET) \$(OBJECTS) \$(BOOST_LIBS)

# Regel om .cpp naar .o te compileren
%.o: %.cpp
	\$(CXX) \$(CXXFLAGS) -c \$< -o \$@

# Regel om schoon te maken
clean:
	rm -f \$(OBJECTS) \$(TARGET)
EOL

echo "Configuration complete. Run 'make' to build the project."
