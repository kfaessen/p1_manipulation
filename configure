#!/bin/bash

# Set default values
CXX=g++
BOOST_LIBS=-lboost_system
CXXFLAGS="-std=c++11 -Wall -O2"
OUTPUT_BINARY="serial_reader_writer"

# Function to check if a command exists
command_exists () {
    command -v "$1" >/dev/null 2>&1 ;
}

# Check for g++
if command_exists g++ ; then
    echo "Found g++ compiler"
else
    echo "Error: g++ compiler not found"
    exit 1
fi

# Check for Boost library
if echo "#include <boost/system/error_code.hpp>" | g++ -E - >/dev/null 2>&1 ; then
    echo "Found Boost library"
else
    echo "Error: Boost library not found"
    exit 1
fi

# Generate Makefile
cat << EOF > Makefile
# Generated by configure script

# Define the compiler
CXX = $CXX

# Define the flags to pass to the compiler
CXXFLAGS = $CXXFLAGS

# Include the Boost library path
BOOST_LIBS = $BOOST_LIBS

# Define the output executable name
TARGET = $OUTPUT_BINARY

# Define the source files
SRCS = main.cpp

# Define the object files
OBJS = \$(SRCS:.cpp=.o)

# Define the default target
all: \$(TARGET)

# Rule to build the target executable
\$(TARGET): \$(OBJS)
	\$(CXX) \$(CXXFLAGS) -o \$(TARGET) \$(OBJS) \$(BOOST_LIBS)

# Rule to build the object files
%.o: %.cpp
	\$(CXX) \$(CXXFLAGS) -c \$< -o \$@

# Rule to clean the build files
clean:
	rm -f \$(OBJS) \$(TARGET)

# Phony targets are not actual files
.PHONY: all clean
EOF

echo "Configuration complete."
echo "Run 'make' to build the project."
